//
//  ChatViewController.swift
//  Flash Chat iOS13
//
//  Created by Angela Yu on 21/10/2019.
//  Copyright ¬© 2019 Angela Yu. All rights reserved.
//

import UIKit
import FirebaseAuth
import FirebaseFirestore

class ChatViewController: UIViewController {
    
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var messageTextfield: UITextField!
    
    var messages: [MessageModel] = [
        MessageModel(sender: "1@gmail.com", body: "Hey!"),
        MessageModel(sender: "2@gmail.com", body: "Hello!"),
        MessageModel(sender: "1@gmail.com", body: "What's up?!")
    ]
    
    let db = Firestore.firestore()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        tableView.dataSource = self
        tableView.delegate = self
        title = "üòé FlashChat"
        navigationItem.hidesBackButton = true
        tableView.register(UINib(nibName: K.cellNibName, bundle: nil),
                           forCellReuseIdentifier: K.cellIdentifier)
        loadMessage()
    }
    
    private func loadMessage() {
        // db.collection(K.FStore.collectionName).getDocuments –ü—Ä–æ—Å—Ç–æ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
        // db.collection(K.FStore.collectionName).addSnapshotListener –°–ª–µ–¥–∏—Ç –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–º–∏ –≤ –±–∞–∑–µ –∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ
        // order - –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –∞ –∑–∞—Ç–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏—Ö
        db.collection(K.FStore.collectionName)
            .order(by: K.FStore.dateField)
            .addSnapshotListener { [weak self] snapshot, error in
            guard let self = self else { return }
            // –æ—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
            self.messages = []
            if let error = error {
                print("–û—à–∏–±–∫–∞ —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã ", error.localizedDescription)
            } else {
                if let documents = snapshot?.documents {
                    for doc in documents {
                        let data = doc.data()
                        // data –±—É–¥–µ—Ç –∏–º–µ—Ç—å –≤–∏–¥ ["body": Test message, "sender": 123@gmail.com] –≠—Ç–æ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤–∞—Ä–µ–π.
                        if let messageSender = data[K.FStore.senderField ] as? String,
                           let messageBody = data[K.FStore.bodyField] as? String {
                            let newMessage = MessageModel(sender: messageSender,
                                                          body: messageBody)
                            self.messages.append(newMessage)
                            
                            DispatchQueue.main.async {
                                self.tableView.reloadData()
                                let indexLastMessage = IndexPath(row: self.messages.count - 1, section: 0)
                                // animated: false, - –Ω–µ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ –∫–∞–∫ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞. true –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ –≤–Ω–∏–∑.
                                self.tableView.scrollToRow(at: indexLastMessage, at: .top, animated: false)
                            }
                        }
                    }
                }
            }
        }
    }
    
    @IBAction func sendPressed(_ sender: UIButton) {
        if let messageBody = messageTextfield.text,
           let messageSender = Auth.auth().currentUser?.email {
            db.collection(K.FStore.collectionName).addDocument(data: [
                // –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Ç–∏–ø–∞ String: Any
                K.FStore.senderField: messageSender,
                K.FStore.bodyField: messageBody,
                K.FStore.dateField: Date().timeIntervalSince1970
            ]) { [weak self] error in
                guard let self = self else { return }
                if let error = error {
                    print("–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –≤ Firestore: ", error.localizedDescription)
                } else {
                    print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
                    print("Thread = \(Thread.current)")
                    print("qos = \(qos_class_self().rawValue)")
                    DispatchQueue.main.async {
                        self.messageTextfield.text = "" // –æ—á–∏—Å—Ç–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
                    }
                }
            }
        }
    }
    
    @IBAction func logOutPressed(_ sender: UIButton) {
        do {
            try Auth.auth().signOut()
            navigationController?.popToRootViewController(animated: true)
        } catch let signOutError as NSError {
            print("Error signing out: %@", signOutError)
        }
    }
}

// MARK: - UITableViewDataSource
extension ChatViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        messages.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let message = messages[indexPath.row]
        
        let cell = tableView.dequeueReusableCell(withIdentifier: K.cellIdentifier,
                                                 for: indexPath)
        as! MessageCell
        cell.lbl.text = message.body
        
        // –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å —Å–æ–≤–ø–∞–¥–µ—Ç —Å —Ç–µ–∫—É—â–µ–º —é–∑–µ—Ä–æ–º, —Ç–æ –ø–æ–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥—É—é —è—á–µ–π–∫—É
        if message.sender == Auth.auth().currentUser?.email {
            cell.companionAvatarImageView.isHidden = true
            cell.avatarImageView.isHidden = false
            cell.messageBubble.backgroundColor = UIColor(named: K.BrandColors.lightPurple)
            cell.lbl.textColor = UIColor(named: K.BrandColors.purple)
        } else {
            cell.companionAvatarImageView.isHidden = false
            cell.avatarImageView.isHidden = true
            cell.messageBubble.backgroundColor = UIColor(named: K.BrandColors.purple)
            cell.lbl.textColor = UIColor(named: K.BrandColors.lightPurple)
        }
        
        
        return cell
    }
}

// MARK: - UITableViewDelegate
extension ChatViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
    }
}
